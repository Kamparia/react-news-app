{"ast":null,"code":"'use strict';\n\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\nconst ESCAPES = new Map([['n', '\\n'], ['r', '\\r'], ['t', '\\t'], ['b', '\\b'], ['f', '\\f'], ['v', '\\v'], ['0', '\\0'], ['\\\\', '\\\\'], ['e', '\\u001B'], ['a', '\\u0007']]);\n\nfunction unescape(c) {\n  if (c[0] === 'u' && c.length === 5 || c[0] === 'x' && c.length === 3) {\n    return String.fromCharCode(parseInt(c.slice(1), 16));\n  }\n\n  return ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n  const results = [];\n  const chunks = args.trim().split(/\\s*,\\s*/g);\n  let matches;\n\n  for (const chunk of chunks) {\n    if (!isNaN(chunk)) {\n      results.push(Number(chunk));\n    } else if (matches = chunk.match(STRING_REGEX)) {\n      results.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n    } else {\n      throw new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n    }\n  }\n\n  return results;\n}\n\nfunction parseStyle(style) {\n  STYLE_REGEX.lastIndex = 0;\n  const results = [];\n  let matches;\n\n  while ((matches = STYLE_REGEX.exec(style)) !== null) {\n    const name = matches[1];\n\n    if (matches[2]) {\n      const args = parseArguments(name, matches[2]);\n      results.push([name].concat(args));\n    } else {\n      results.push([name]);\n    }\n  }\n\n  return results;\n}\n\nfunction buildStyle(chalk, styles) {\n  const enabled = {};\n\n  for (const layer of styles) {\n    for (const style of layer.styles) {\n      enabled[style[0]] = layer.inverse ? null : style.slice(1);\n    }\n  }\n\n  let current = chalk;\n\n  for (const styleName of Object.keys(enabled)) {\n    if (Array.isArray(enabled[styleName])) {\n      if (!(styleName in current)) {\n        throw new Error(`Unknown Chalk style: ${styleName}`);\n      }\n\n      if (enabled[styleName].length > 0) {\n        current = current[styleName].apply(current, enabled[styleName]);\n      } else {\n        current = current[styleName];\n      }\n    }\n  }\n\n  return current;\n}\n\nmodule.exports = (chalk, tmp) => {\n  const styles = [];\n  const chunks = [];\n  let chunk = []; // eslint-disable-next-line max-params\n\n  tmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n    if (escapeChar) {\n      chunk.push(unescape(escapeChar));\n    } else if (style) {\n      const str = chunk.join('');\n      chunk = [];\n      chunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n      styles.push({\n        inverse,\n        styles: parseStyle(style)\n      });\n    } else if (close) {\n      if (styles.length === 0) {\n        throw new Error('Found extraneous } in Chalk template literal');\n      }\n\n      chunks.push(buildStyle(chalk, styles)(chunk.join('')));\n      chunk = [];\n      styles.pop();\n    } else {\n      chunk.push(chr);\n    }\n  });\n  chunks.push(chunk.join(''));\n\n  if (styles.length > 0) {\n    const errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n    throw new Error(errMsg);\n  }\n\n  return chunks.join('');\n};","map":{"version":3,"sources":["C:/Users/Olaoye Somide/Documents/GitHub/react-news-app/node_modules/chalk/templates.js"],"names":["TEMPLATE_REGEX","STYLE_REGEX","STRING_REGEX","ESCAPE_REGEX","ESCAPES","Map","unescape","c","length","String","fromCharCode","parseInt","slice","get","parseArguments","name","args","results","chunks","trim","split","matches","chunk","isNaN","push","Number","match","replace","m","escape","chr","Error","parseStyle","style","lastIndex","exec","concat","buildStyle","chalk","styles","enabled","layer","inverse","current","styleName","Object","keys","Array","isArray","apply","module","exports","tmp","escapeChar","close","str","join","pop","errMsg"],"mappings":"AAAA;;AACA,MAAMA,cAAc,GAAG,sIAAvB;AACA,MAAMC,WAAW,GAAG,gCAApB;AACA,MAAMC,YAAY,GAAG,kCAArB;AACA,MAAMC,YAAY,GAAG,yCAArB;AAEA,MAAMC,OAAO,GAAG,IAAIC,GAAJ,CAAQ,CACvB,CAAC,GAAD,EAAM,IAAN,CADuB,EAEvB,CAAC,GAAD,EAAM,IAAN,CAFuB,EAGvB,CAAC,GAAD,EAAM,IAAN,CAHuB,EAIvB,CAAC,GAAD,EAAM,IAAN,CAJuB,EAKvB,CAAC,GAAD,EAAM,IAAN,CALuB,EAMvB,CAAC,GAAD,EAAM,IAAN,CANuB,EAOvB,CAAC,GAAD,EAAM,IAAN,CAPuB,EAQvB,CAAC,IAAD,EAAO,IAAP,CARuB,EASvB,CAAC,GAAD,EAAM,QAAN,CATuB,EAUvB,CAAC,GAAD,EAAM,QAAN,CAVuB,CAAR,CAAhB;;AAaA,SAASC,QAAT,CAAkBC,CAAlB,EAAqB;AACpB,MAAKA,CAAC,CAAC,CAAD,CAAD,KAAS,GAAT,IAAgBA,CAAC,CAACC,MAAF,KAAa,CAA9B,IAAqCD,CAAC,CAAC,CAAD,CAAD,KAAS,GAAT,IAAgBA,CAAC,CAACC,MAAF,KAAa,CAAtE,EAA0E;AACzE,WAAOC,MAAM,CAACC,YAAP,CAAoBC,QAAQ,CAACJ,CAAC,CAACK,KAAF,CAAQ,CAAR,CAAD,EAAa,EAAb,CAA5B,CAAP;AACA;;AAED,SAAOR,OAAO,CAACS,GAAR,CAAYN,CAAZ,KAAkBA,CAAzB;AACA;;AAED,SAASO,cAAT,CAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC;AACnC,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,MAAM,GAAGF,IAAI,CAACG,IAAL,GAAYC,KAAZ,CAAkB,UAAlB,CAAf;AACA,MAAIC,OAAJ;;AAEA,OAAK,MAAMC,KAAX,IAAoBJ,MAApB,EAA4B;AAC3B,QAAI,CAACK,KAAK,CAACD,KAAD,CAAV,EAAmB;AAClBL,MAAAA,OAAO,CAACO,IAAR,CAAaC,MAAM,CAACH,KAAD,CAAnB;AACA,KAFD,MAEO,IAAKD,OAAO,GAAGC,KAAK,CAACI,KAAN,CAAYxB,YAAZ,CAAf,EAA2C;AACjDe,MAAAA,OAAO,CAACO,IAAR,CAAaH,OAAO,CAAC,CAAD,CAAP,CAAWM,OAAX,CAAmBxB,YAAnB,EAAiC,CAACyB,CAAD,EAAIC,MAAJ,EAAYC,GAAZ,KAAoBD,MAAM,GAAGvB,QAAQ,CAACuB,MAAD,CAAX,GAAsBC,GAAjF,CAAb;AACA,KAFM,MAEA;AACN,YAAM,IAAIC,KAAJ,CAAW,0CAAyCT,KAAM,eAAcP,IAAK,IAA7E,CAAN;AACA;AACD;;AAED,SAAOE,OAAP;AACA;;AAED,SAASe,UAAT,CAAoBC,KAApB,EAA2B;AAC1BhC,EAAAA,WAAW,CAACiC,SAAZ,GAAwB,CAAxB;AAEA,QAAMjB,OAAO,GAAG,EAAhB;AACA,MAAII,OAAJ;;AAEA,SAAO,CAACA,OAAO,GAAGpB,WAAW,CAACkC,IAAZ,CAAiBF,KAAjB,CAAX,MAAwC,IAA/C,EAAqD;AACpD,UAAMlB,IAAI,GAAGM,OAAO,CAAC,CAAD,CAApB;;AAEA,QAAIA,OAAO,CAAC,CAAD,CAAX,EAAgB;AACf,YAAML,IAAI,GAAGF,cAAc,CAACC,IAAD,EAAOM,OAAO,CAAC,CAAD,CAAd,CAA3B;AACAJ,MAAAA,OAAO,CAACO,IAAR,CAAa,CAACT,IAAD,EAAOqB,MAAP,CAAcpB,IAAd,CAAb;AACA,KAHD,MAGO;AACNC,MAAAA,OAAO,CAACO,IAAR,CAAa,CAACT,IAAD,CAAb;AACA;AACD;;AAED,SAAOE,OAAP;AACA;;AAED,SAASoB,UAAT,CAAoBC,KAApB,EAA2BC,MAA3B,EAAmC;AAClC,QAAMC,OAAO,GAAG,EAAhB;;AAEA,OAAK,MAAMC,KAAX,IAAoBF,MAApB,EAA4B;AAC3B,SAAK,MAAMN,KAAX,IAAoBQ,KAAK,CAACF,MAA1B,EAAkC;AACjCC,MAAAA,OAAO,CAACP,KAAK,CAAC,CAAD,CAAN,CAAP,GAAoBQ,KAAK,CAACC,OAAN,GAAgB,IAAhB,GAAuBT,KAAK,CAACrB,KAAN,CAAY,CAAZ,CAA3C;AACA;AACD;;AAED,MAAI+B,OAAO,GAAGL,KAAd;;AACA,OAAK,MAAMM,SAAX,IAAwBC,MAAM,CAACC,IAAP,CAAYN,OAAZ,CAAxB,EAA8C;AAC7C,QAAIO,KAAK,CAACC,OAAN,CAAcR,OAAO,CAACI,SAAD,CAArB,CAAJ,EAAuC;AACtC,UAAI,EAAEA,SAAS,IAAID,OAAf,CAAJ,EAA6B;AAC5B,cAAM,IAAIZ,KAAJ,CAAW,wBAAuBa,SAAU,EAA5C,CAAN;AACA;;AAED,UAAIJ,OAAO,CAACI,SAAD,CAAP,CAAmBpC,MAAnB,GAA4B,CAAhC,EAAmC;AAClCmC,QAAAA,OAAO,GAAGA,OAAO,CAACC,SAAD,CAAP,CAAmBK,KAAnB,CAAyBN,OAAzB,EAAkCH,OAAO,CAACI,SAAD,CAAzC,CAAV;AACA,OAFD,MAEO;AACND,QAAAA,OAAO,GAAGA,OAAO,CAACC,SAAD,CAAjB;AACA;AACD;AACD;;AAED,SAAOD,OAAP;AACA;;AAEDO,MAAM,CAACC,OAAP,GAAiB,CAACb,KAAD,EAAQc,GAAR,KAAgB;AAChC,QAAMb,MAAM,GAAG,EAAf;AACA,QAAMrB,MAAM,GAAG,EAAf;AACA,MAAII,KAAK,GAAG,EAAZ,CAHgC,CAKhC;;AACA8B,EAAAA,GAAG,CAACzB,OAAJ,CAAY3B,cAAZ,EAA4B,CAAC4B,CAAD,EAAIyB,UAAJ,EAAgBX,OAAhB,EAAyBT,KAAzB,EAAgCqB,KAAhC,EAAuCxB,GAAvC,KAA+C;AAC1E,QAAIuB,UAAJ,EAAgB;AACf/B,MAAAA,KAAK,CAACE,IAAN,CAAWlB,QAAQ,CAAC+C,UAAD,CAAnB;AACA,KAFD,MAEO,IAAIpB,KAAJ,EAAW;AACjB,YAAMsB,GAAG,GAAGjC,KAAK,CAACkC,IAAN,CAAW,EAAX,CAAZ;AACAlC,MAAAA,KAAK,GAAG,EAAR;AACAJ,MAAAA,MAAM,CAACM,IAAP,CAAYe,MAAM,CAAC/B,MAAP,KAAkB,CAAlB,GAAsB+C,GAAtB,GAA4BlB,UAAU,CAACC,KAAD,EAAQC,MAAR,CAAV,CAA0BgB,GAA1B,CAAxC;AACAhB,MAAAA,MAAM,CAACf,IAAP,CAAY;AAACkB,QAAAA,OAAD;AAAUH,QAAAA,MAAM,EAAEP,UAAU,CAACC,KAAD;AAA5B,OAAZ;AACA,KALM,MAKA,IAAIqB,KAAJ,EAAW;AACjB,UAAIf,MAAM,CAAC/B,MAAP,KAAkB,CAAtB,EAAyB;AACxB,cAAM,IAAIuB,KAAJ,CAAU,8CAAV,CAAN;AACA;;AAEDb,MAAAA,MAAM,CAACM,IAAP,CAAYa,UAAU,CAACC,KAAD,EAAQC,MAAR,CAAV,CAA0BjB,KAAK,CAACkC,IAAN,CAAW,EAAX,CAA1B,CAAZ;AACAlC,MAAAA,KAAK,GAAG,EAAR;AACAiB,MAAAA,MAAM,CAACkB,GAAP;AACA,KARM,MAQA;AACNnC,MAAAA,KAAK,CAACE,IAAN,CAAWM,GAAX;AACA;AACD,GAnBD;AAqBAZ,EAAAA,MAAM,CAACM,IAAP,CAAYF,KAAK,CAACkC,IAAN,CAAW,EAAX,CAAZ;;AAEA,MAAIjB,MAAM,CAAC/B,MAAP,GAAgB,CAApB,EAAuB;AACtB,UAAMkD,MAAM,GAAI,qCAAoCnB,MAAM,CAAC/B,MAAO,mBAAkB+B,MAAM,CAAC/B,MAAP,KAAkB,CAAlB,GAAsB,EAAtB,GAA2B,GAAI,UAAnH;AACA,UAAM,IAAIuB,KAAJ,CAAU2B,MAAV,CAAN;AACA;;AAED,SAAOxC,MAAM,CAACsC,IAAP,CAAY,EAAZ,CAAP;AACA,CAnCD","sourcesContent":["'use strict';\r\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\r\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\r\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\r\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\r\n\r\nconst ESCAPES = new Map([\r\n\t['n', '\\n'],\r\n\t['r', '\\r'],\r\n\t['t', '\\t'],\r\n\t['b', '\\b'],\r\n\t['f', '\\f'],\r\n\t['v', '\\v'],\r\n\t['0', '\\0'],\r\n\t['\\\\', '\\\\'],\r\n\t['e', '\\u001B'],\r\n\t['a', '\\u0007']\r\n]);\r\n\r\nfunction unescape(c) {\r\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\r\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\r\n\t}\r\n\r\n\treturn ESCAPES.get(c) || c;\r\n}\r\n\r\nfunction parseArguments(name, args) {\r\n\tconst results = [];\r\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\r\n\tlet matches;\r\n\r\n\tfor (const chunk of chunks) {\r\n\t\tif (!isNaN(chunk)) {\r\n\t\t\tresults.push(Number(chunk));\r\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\r\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\r\n\t\t} else {\r\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\r\n\t\t}\r\n\t}\r\n\r\n\treturn results;\r\n}\r\n\r\nfunction parseStyle(style) {\r\n\tSTYLE_REGEX.lastIndex = 0;\r\n\r\n\tconst results = [];\r\n\tlet matches;\r\n\r\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\r\n\t\tconst name = matches[1];\r\n\r\n\t\tif (matches[2]) {\r\n\t\t\tconst args = parseArguments(name, matches[2]);\r\n\t\t\tresults.push([name].concat(args));\r\n\t\t} else {\r\n\t\t\tresults.push([name]);\r\n\t\t}\r\n\t}\r\n\r\n\treturn results;\r\n}\r\n\r\nfunction buildStyle(chalk, styles) {\r\n\tconst enabled = {};\r\n\r\n\tfor (const layer of styles) {\r\n\t\tfor (const style of layer.styles) {\r\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\r\n\t\t}\r\n\t}\r\n\r\n\tlet current = chalk;\r\n\tfor (const styleName of Object.keys(enabled)) {\r\n\t\tif (Array.isArray(enabled[styleName])) {\r\n\t\t\tif (!(styleName in current)) {\r\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\r\n\t\t\t}\r\n\r\n\t\t\tif (enabled[styleName].length > 0) {\r\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\r\n\t\t\t} else {\r\n\t\t\t\tcurrent = current[styleName];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn current;\r\n}\r\n\r\nmodule.exports = (chalk, tmp) => {\r\n\tconst styles = [];\r\n\tconst chunks = [];\r\n\tlet chunk = [];\r\n\r\n\t// eslint-disable-next-line max-params\r\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\r\n\t\tif (escapeChar) {\r\n\t\t\tchunk.push(unescape(escapeChar));\r\n\t\t} else if (style) {\r\n\t\t\tconst str = chunk.join('');\r\n\t\t\tchunk = [];\r\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\r\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\r\n\t\t} else if (close) {\r\n\t\t\tif (styles.length === 0) {\r\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\r\n\t\t\t}\r\n\r\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\r\n\t\t\tchunk = [];\r\n\t\t\tstyles.pop();\r\n\t\t} else {\r\n\t\t\tchunk.push(chr);\r\n\t\t}\r\n\t});\r\n\r\n\tchunks.push(chunk.join(''));\r\n\r\n\tif (styles.length > 0) {\r\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\r\n\t\tthrow new Error(errMsg);\r\n\t}\r\n\r\n\treturn chunks.join('');\r\n};\r\n"]},"metadata":{},"sourceType":"script"}